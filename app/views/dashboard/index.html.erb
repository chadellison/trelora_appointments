<div class="nav">
  <ul>
    <li class="active login"><%= link_to "Sign in with Google", google_login_path if !current_user %></li>
    <li class="active login"><%= link_to "Logout", session_path, method: :delete if current_user %></li>
    <li class="add_user"><%= link_to "Add User", "#" %></li>
    <li class="photographer"><%= link_to "Photographer", "#" %></li>
    <li class="appraiser"><%= link_to "Appraiser", "#" %></li>
    <li><input class="search" type="text" name="search" placeholder="New Address">
        <input class="button" type="button" value="New Address">
    </li>
  </ul>
</div>
<div id="user-create-menu">
  <%= render partial: "dashboard/user_create" %>
</div>
<div id="map"></div>
<script>
  function initMap() {
      var appointmentData = ''
      $.ajax({
        type: 'GET',
        url: "http://localhost:3000/api/v1/field_workers.json",
        success: function(data) {
          returnData(data)
        }
      })
      function returnData(data){
        fieldWorkerData = data


    var map = new google.maps.Map(document.getElementById('map'), {
    });

    var directionsService = new google.maps.DirectionsService;
    var trelora = "2401 15th st, Denver CO 80202"
    var colors = ["red", "green", "purple", "blue"]
    $.each(fieldWorkerData, function(i, fieldWorker){
      var name = fieldWorker.username
      var icon = fieldWorker.icon
      var appointments = fieldWorker.appointments
      var waypoints = []

      $.each(appointments, function(index, appointment){
        waypoints.push({location: appointment.location.address})

        var marker = new google.maps.Marker({
          position: {lat: appointment.location.latitude, lng: appointment.location.longitude},
          icon: icon,
          map: map
        });
      })

      length = appointments.length
      var directionsDisplay = new google.maps.DirectionsRenderer({
        map: map,
        suppressMarkers : true,
        polylineOptions: {
          strokeColor: colors[i - 1]
        }
      });

      displayRoute(trelora, waypoints, directionsService,
          directionsDisplay);
    })
  }

  function displayRoute(trelora, waypoints, service, display) {
    service.route({
      origin: trelora,
      destination: trelora,
      waypoints: waypoints,
      travelMode: google.maps.TravelMode.DRIVING,
      avoidTolls: true
    }, function(response, status) {
      if (status === google.maps.DirectionsStatus.OK) {
        display.setDirections(response);
      } else {
        alert('Could not display directions due to: ' + status);
      }
    });
  }
  }

</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap">
</script>
