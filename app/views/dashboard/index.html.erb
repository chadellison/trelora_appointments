<div class="nav">
  <ul>
    <li id="add-user"><%= link_to "Add User", "#" %></li>
    <li id="remove-user"><%= link_to "Remove User", "#" %></li>
    <li class="photographer"><%= link_to "Photographer", "#" %></li>
    <li class="appraiser"><%= link_to "Appraiser", "#" %></li>
    <li class="datepicker">Date <input type="text" id="datepicker"></li>
    <li id="demo"></li>
  </ul>
</div>
<div id="user-menu" class="hidden" >
  <%= render partial: "dashboard/user_create" %>
</div>
<div id="remove-user-menu" class="hidden" >
  <%= render partial: "dashboard/remove_user" %>
</div>

<div id="map" class="map-width-100"></div>
<div id="fuck"></div>

<script>

  function initMap() {
    var i = 0
    var date  = "<%= @date %>"
    console.log(date)
    if (date) {
      getDate(date)
    } else if (i === 0) {
      getDate()
    }

    function getDate(date) {
      $.ajax({
        type: 'GET',
        data: {day: date},
        url: "/api/v1/field_workers.json",

        success: function(data) {
          $('#fuck').append('<input id="pac-input" class="controls" type="text" placeholder="Address">')
          returnData(data)
          i = i + 1
        },
        error: function(errorBody){
          alert("error")
        }
      })
    }

    $('#datepicker').datepicker({
      onSelect: function(dateText, inst) {
        getDate(dateText)
      }
    });

    function returnData(data){
      fieldWorkerData = data

      var map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 39.753, lng: -104.9775},
        zoom: 10
      });

      var input = document.getElementById('pac-input');

      var searchBox = new google.maps.places.SearchBox(input);
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
      map.addListener('bounds_changed', function() {
        searchBox.setBounds(map.getBounds());
      });


      var markers = [];

      searchBox.addListener('places_changed', function() {
        var places = searchBox.getPlaces();

        if (places.length == 0) {
          return;
        }

        markers.forEach(function(marker) {
          marker.setMap(null);
        });

        var bounds = new google.maps.LatLngBounds();
        places.forEach(function(place) {
          var icon = {
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
          };

          // Create a marker for each place.
          markers.push(new google.maps.Marker({
            map: map,
            icon: icon,
            title: place.name,
            position: place.geometry.location
          }));
          $.each(markers, function(i,marker){
            attachSecretMessage(marker, place.name);
          })
          if (place.geometry.viewport) {
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        });
      });

      var directionsService = new google.maps.DirectionsService;
      var trelora = "2401 15th st, Denver CO 80202"
      var colors = ["red", "green", "purple", "blue", "white", "orange", "yellow"]
      $.each(fieldWorkerData, function(i, fieldWorker){

        var name = fieldWorker.username
        var icon = fieldWorker.icon
        var appointments = fieldWorker.appointments
        var waypoints = []

        $.each(appointments, function(index, appointment){
          waypoints.push({location: appointment.location.address})

          var appointmentInfo = name + "<br />" +
          appointment.location.address + "</br>" +
          "start time: " + appointment.info.start_time + "</br>" +
          "end time: " + appointment.info.end_time + "</br>" +
          appointment.info.description

          var marker = new google.maps.Marker({
            position: {lat: appointment.location.latitude, lng: appointment.location.longitude},
            icon: icon,
            map: map
          });

          attachSecretMessage(marker, appointmentInfo);
        })

        var latitude = +("<%= @address.latitude %>")
        var longitude = + ("<%= @address.longitude %>")

        var marker = new google.maps.Marker({
          position: {lat: latitude, lng: longitude },
          icon: icon,
          map: map
        });


        length = appointments.length
        var directionsDisplay = new google.maps.DirectionsRenderer({
          map: map,

          suppressMarkers : true,
          polylineOptions: {
            strokeColor: colors[i]
          }
        });

        displayRoute(trelora, waypoints, directionsService,directionsDisplay);
      })
    }

    function displayRoute(trelora, waypoints, service, display) {
      service.route({
        origin: trelora,
        destination: trelora,
        waypoints: waypoints,
        travelMode: google.maps.TravelMode.DRIVING,
        avoidTolls: true
      }, function(response, status) {
        if (status === google.maps.DirectionsStatus.OK) {
          display.setOptions({ preserveViewport: true });
          display.setDirections(response);
        } else {
          alert('Could not display directions due to: ' + status);
        }
      });
    }
  }

  function attachSecretMessage(marker, secretMessage) {
    var infowindow = new google.maps.InfoWindow({
      content: secretMessage
    });

    marker.addListener('mouseover', function() {

      infowindow.open(marker.get('map'), marker);

    });
    marker.addListener('mouseout', function() {
      infowindow.close(marker.get('map'), marker);
    });

  }

</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&libraries=places&callback=initAutocomplete&callback=initMap">
</script>
</div>
